  CREATE VERTEX Community(PRIMARY_ID cid UINT) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Address(PRIMARY_ID address STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX City(PRIMARY_ID city STRING, population INT) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Merchant(PRIMARY_ID id STRING, pagerank FLOAT, c_id INT, c_size INT) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX State(PRIMARY_ID id STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Zipcode(PRIMARY_ID id STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Payment_Transaction(PRIMARY_ID id STRING, transaction_time DATETIME, amount DOUBLE, is_fraud INT, unix_time UINT, shortest_path_length INT, max_txn_amt_interval FLOAT, max_txn_cnt_interval INT, cnt_repeated_card INT, com_mer_txn_cnt INT, com_mer_txn_total_amt FLOAT, com_mer_txn_avg_amt FLOAT, com_mer_txn_max_amt FLOAT, com_mer_txn_min_amt FLOAT, com_cd_txn_cnt INT, com_cd_txn_total_amt FLOAT, com_cd_txn_avg_amt FLOAT, com_cd_txn_max_amt FLOAT, com_cd_txn_min_amt FLOAT, indegree INT, outdegree INT, mer_cat STRING, mer_cat_cnt INT, mer_cat_total_amt FLOAT, mer_cat_avg_amt FLOAT, mer_cat_max_amt FLOAT, mer_cat_min_amt FLOAT, mer_pagerank FLOAT, cd_pagerank FLOAT, mer_com_size INT, cd_com_size INT, age INT, city_pop INT, occupation STRING, gender STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Card(PRIMARY_ID card_number INT, is_fraud INT, card_type STRING, pagerank FLOAT, c_id INT, c_size INT) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Merchant_Category(PRIMARY_ID category STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Party(PRIMARY_ID id STRING, is_fraud INT, gender STRING, dob DATETIME, party_type STRING, name STRING, created_at UINT) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Phone(PRIMARY_ID phone_number STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Email(PRIMARY_ID email STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX IP(PRIMARY_ID id STRING, is_blocked BOOL) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Device(PRIMARY_ID id STRING, is_blocked BOOL) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX ID(PRIMARY_ID id STRING, id_type STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Full_Name(PRIMARY_ID name STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX DOB(PRIMARY_ID dob DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"
  CREATE VERTEX Concept(PRIMARY_ID id STRING, concept_type STRING, description STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true"

  CREATE UNDIRECTED EDGE Merchant_Merchant(FROM Merchant, TO Merchant, weight FLOAT)
  CREATE UNDIRECTED EDGE Merchant_Receive_Transaction(FROM Payment_Transaction, TO Merchant)
  CREATE UNDIRECTED EDGE Card_Send_Transaction(FROM Payment_Transaction, TO Card)
  CREATE UNDIRECTED EDGE Card_Card(FROM Card, TO Card, weight INT)
  CREATE UNDIRECTED EDGE Merchant_Assigned(FROM Merchant, TO Merchant_Category)
  CREATE DIRECTED EDGE Is_SubCategory(FROM Merchant_Category, TO Merchant_Category) WITH REVERSE_EDGE="reverse_Is_SubCategory" 
  CREATE UNDIRECTED EDGE Has_Interaction_With_Merchant(FROM Card, TO Merchant)
  CREATE UNDIRECTED EDGE Has_Address(FROM Address, TO Party)
  CREATE UNDIRECTED EDGE Is_Merchant(FROM Merchant, TO Party)
  CREATE UNDIRECTED EDGE Party_Has_Card(FROM Party, TO Card)
  CREATE UNDIRECTED EDGE Has_Phone(FROM Party, TO Phone)
  CREATE UNDIRECTED EDGE Has_Email(FROM Party, TO Email)
  CREATE UNDIRECTED EDGE Has_Community(FROM Party, TO Community|FROM Merchant, TO Community|FROM Card, TO Community)
  CREATE UNDIRECTED EDGE Has_ID(FROM Party, TO ID)
  CREATE UNDIRECTED EDGE Has_IP(FROM Party, TO IP)
  CREATE UNDIRECTED EDGE Has_Device(FROM Party, TO Device)
  CREATE UNDIRECTED EDGE Assigned_To(FROM Address, TO Zipcode|FROM Zipcode, TO City)
  CREATE UNDIRECTED EDGE Located_In(FROM Address, TO City|FROM City, TO State)
  CREATE UNDIRECTED EDGE Has_DOB(FROM Party, TO DOB)
  CREATE UNDIRECTED EDGE Has_Full_Name(FROM Party, TO Full_Name)
  CREATE DIRECTED EDGE DESCRIBES(FROM Concept, TO Party|FROM Concept, TO Merchant|FROM Concept, TO Payment_Transaction|FROM Concept, TO Zipcode|FROM Concept, TO City|FROM Concept, TO Card) WITH REVERSE_EDGE="reverse_DESCRIBES"
  CREATE DIRECTED EDGE IS_CHILD_OF(FROM Concept, TO Concept) WITH REVERSE_EDGE="reverse_IS_CHILD_OF"
 


CREATE GRAPH Transaction_Fraud (Community, Address, City, Merchant, State, Zipcode, Payment_Transaction, Card, Merchant_Category, Party, Phone, Email, IP, Device, ID, Full_Name, DOB, Concept, Merchant_Merchant, Merchant_Receive_Transaction, Card_Send_Transaction, Card_Card, Merchant_Assigned, Is_SubCategory, Has_Interaction_With_Merchant, Has_Address, Is_Merchant, Party_Has_Card, Has_Phone, Has_Email, Has_Community, Has_ID, Has_IP, Has_Device, Assigned_To, Located_In, Has_DOB, Has_Full_Name, DESCRIBES, IS_CHILD_OF)
set exit_on_error = "false"